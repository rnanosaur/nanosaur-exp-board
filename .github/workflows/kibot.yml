name: "Kibot builder"

# Reference:
# https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#on
on:
  workflow_dispatch:
#    paths:
#    - '**.sch'
#    - '**.kicad_pcb'
#    - 'config.kibot.yaml'
  push:
#    paths:
#    - '**.sch'
#    - '**.kicad_pcb'
#    - 'config.kibot.yaml'
  pull_request:
#    paths:
#      - '**.sch'
#      - '**.kicad_pcb'
#      - 'config.kibot.yaml'

jobs:
  export:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: nerdyscout/kicad-exports@v2.2
      with:
      # Required - kibot config file
        config: config.kibot.yaml
      # optional - prefix to output defined in config
        dir: docs
      # optional - schematic file
        schema: '*.sch'
      # optional - PCB design file
        board: '*.kicad_pcb'
    # https://github.com/amoeba/combine-pdf-action
    - name: Combine PDFs
      id: combine
      uses: amoeba/combine-pdf-action@v1
      with:
        path: docs/docs/pdf
    - name: upload results
      uses: actions/upload-artifact@v2
      with:
        name: docs
        path: docs

  test:
    needs: [export]
    runs-on: ubuntu-latest #self-hosted
    steps:
    - name: Extract artifact
      uses: actions/download-artifact@v2
      with:
        name: docs
    - name: Build project # This would actually build your project, using zip for an example artifact
      run: |
        bash gerberzip.sh
        ls

  website:
    name: Push new data to NanoSaur website
    if: startsWith(github.ref, 'refs/tags/')
    needs: [export]
    runs-on: ubuntu-latest #self-hosted
    steps:
      # https://docs.github.com/en/actions/guides/storing-workflow-data-as-artifacts
      - name: Extract artifact
        uses: actions/download-artifact@v2
        with:
          name: docs
      - name: Push SVG images
        uses: dmnemec/copy_file_to_another_repo_action@v1.0.4
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_file: 'docs/expansion-board'
          destination_repo: 'rnanosaur/rnanosaur.github.io'
          destination_folder: 'assets/docs'
          user_email: 'raffaello@rnext.it'
          user_name: 'rbonghi'
          commit_message: 'ðŸš€ Push updated images NanoSaur expansion board'
      - name: Push CSV BOM
        uses: dmnemec/copy_file_to_another_repo_action@v1.0.4
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_file: 'nanosaur-exp-board.csv'
          destination_repo: 'rnanosaur/rnanosaur.github.io'
          destination_folder: '_data'
          user_email: 'raffaello@rnext.it'
          user_name: 'rbonghi'
          commit_message: 'ðŸš€ Push updated BOM NanoSaur expansion board'

  release:
    name: release version
    if: startsWith(github.ref, 'refs/tags/')
    needs: [export]
    runs-on: ubuntu-latest #self-hosted
    steps:
      # https://docs.github.com/en/actions/guides/storing-workflow-data-as-artifacts
      - name: Extract artifact
        uses: actions/download-artifact@v2
        with:
          name: docs
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
	  bash gerberzip.sh
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release PDF Asset
        id: upload-release-pdf-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`.
          # See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./docs/pdf/combined.pdf
          asset_name: combined.pdf
          asset_content_type: application/pdf
      - name: Upload Release STEP Asset
        id: upload-release-step-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./docs/CAD/nanosaur-exp-board.step
          asset_name: nanosaur-exp-board.step
          asset_content_type: application/step
      - name: Upload Release gerber.zip Asset
        id: upload-release-step-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./gerber.zip
          asset_name: gerber.zip
          asset_content_type: application/zip
